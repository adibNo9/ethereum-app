{"ast":null,"code":"var _jsxFileName = \"/home/adib-alpha/projects/ethereum-app/src/App.js\";\nimport { configureChains, createConfig, WagmiConfig } from \"wagmi\";\nimport { goerli } from \"wagmi/chains\";\nimport { MetaMaskConnector } from \"wagmi/connectors/metaMask\";\nimport { publicProvider } from \"wagmi/providers/public\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst connector = new MetaMaskConnector({\n  chains: [goerli],\n  options: {\n    shimDisconnect: true,\n    UNSTABLE_shimOnConnectSelectAccount: true\n  }\n});\nconst {\n  chains,\n  publicClient,\n  webSocketPublicClient\n} = configureChains([goerli], [publicProvider()], connector);\nconst config = createConfig({\n  autoConnect: true,\n  publicClient,\n  webSocketPublicClient\n});\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(WagmiConfig, {\n    config: config,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["configureChains","createConfig","WagmiConfig","goerli","MetaMaskConnector","publicProvider","jsxDEV","_jsxDEV","connector","chains","options","shimDisconnect","UNSTABLE_shimOnConnectSelectAccount","publicClient","webSocketPublicClient","config","autoConnect","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/adib-alpha/projects/ethereum-app/src/App.js"],"sourcesContent":["import { configureChains, createConfig, WagmiConfig } from \"wagmi\";\nimport { goerli } from \"wagmi/chains\";\nimport { MetaMaskConnector } from \"wagmi/connectors/metaMask\";\nimport { publicProvider } from \"wagmi/providers/public\";\n\nconst connector = new MetaMaskConnector({\n  chains: [goerli],\n  options: {\n    shimDisconnect: true,\n    UNSTABLE_shimOnConnectSelectAccount: true,\n  },\n});\n\nconst { chains, publicClient, webSocketPublicClient } = configureChains(\n  [goerli],\n  [publicProvider()],\n  connector\n);\n\nconst config = createConfig({\n  autoConnect: true,\n  publicClient,\n  webSocketPublicClient,\n});\n\nfunction App() {\n  return (\n    <WagmiConfig config={config}>\n      <div></div>\n    </WagmiConfig>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,eAAe,EAAEC,YAAY,EAAEC,WAAW,QAAQ,OAAO;AAClE,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,iBAAiB,QAAQ,2BAA2B;AAC7D,SAASC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,SAAS,GAAG,IAAIJ,iBAAiB,CAAC;EACtCK,MAAM,EAAE,CAACN,MAAM,CAAC;EAChBO,OAAO,EAAE;IACPC,cAAc,EAAE,IAAI;IACpBC,mCAAmC,EAAE;EACvC;AACF,CAAC,CAAC;AAEF,MAAM;EAAEH,MAAM;EAAEI,YAAY;EAAEC;AAAsB,CAAC,GAAGd,eAAe,CACrE,CAACG,MAAM,CAAC,EACR,CAACE,cAAc,CAAC,CAAC,CAAC,EAClBG,SACF,CAAC;AAED,MAAMO,MAAM,GAAGd,YAAY,CAAC;EAC1Be,WAAW,EAAE,IAAI;EACjBH,YAAY;EACZC;AACF,CAAC,CAAC;AAEF,SAASG,GAAGA,CAAA,EAAG;EACb,oBACEV,OAAA,CAACL,WAAW;IAACa,MAAM,EAAEA,MAAO;IAAAG,QAAA,eAC1BX,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAElB;AAACC,EAAA,GANQN,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}