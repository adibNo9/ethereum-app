{"ast":null,"code":"import { InjectedConnector } from \"./chunk-P4NRLOY7.js\";\nimport { ConnectorNotFoundError } from \"./chunk-UGBGYVBH.js\";\nimport \"./chunk-OQILYQDO.js\";\nimport { __privateAdd, __privateGet, __privateSet } from \"./chunk-W65LBPLT.js\";\n\n// src/metaMask.ts\nimport { ResourceUnavailableRpcError, UserRejectedRequestError, getAddress } from \"viem\";\nvar _UNSTABLE_shimOnConnectSelectAccount;\nvar MetaMaskConnector = class extends InjectedConnector {\n  constructor({\n    chains,\n    options: options_\n  } = {}) {\n    const options = {\n      name: \"MetaMask\",\n      shimDisconnect: true,\n      getProvider() {\n        function getReady(ethereum2) {\n          const isMetaMask = !!ethereum2?.isMetaMask;\n          if (!isMetaMask) return;\n          if (ethereum2.isBraveWallet && !ethereum2._events && !ethereum2._state) return;\n          if (ethereum2.isApexWallet) return;\n          if (ethereum2.isAvalanche) return;\n          if (ethereum2.isBitKeep) return;\n          if (ethereum2.isBlockWallet) return;\n          if (ethereum2.isCoin98) return;\n          if (ethereum2.isFordefi) return;\n          if (ethereum2.isMathWallet) return;\n          if (ethereum2.isOkxWallet || ethereum2.isOKExWallet) return;\n          if (ethereum2.isOneInchIOSWallet || ethereum2.isOneInchAndroidWallet) return;\n          if (ethereum2.isOpera) return;\n          if (ethereum2.isPortal) return;\n          if (ethereum2.isRabby) return;\n          if (ethereum2.isDefiant) return;\n          if (ethereum2.isTokenPocket) return;\n          if (ethereum2.isTokenary) return;\n          if (ethereum2.isZeal) return;\n          if (ethereum2.isZerion) return;\n          return ethereum2;\n        }\n        if (typeof window === \"undefined\") return;\n        const ethereum = window.ethereum;\n        if (ethereum?.providers) return ethereum.providers.find(getReady);\n        return getReady(ethereum);\n      },\n      ...options_\n    };\n    super({\n      chains,\n      options\n    });\n    this.id = \"metaMask\";\n    this.shimDisconnectKey = `${this.id}.shimDisconnect`;\n    __privateAdd(this, _UNSTABLE_shimOnConnectSelectAccount, void 0);\n    __privateSet(this, _UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);\n  }\n  async connect({\n    chainId\n  } = {}) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      let account = null;\n      if (__privateGet(this, _UNSTABLE_shimOnConnectSelectAccount) && this.options?.shimDisconnect && !this.storage?.getItem(this.shimDisconnectKey)) {\n        account = await this.getAccount().catch(() => null);\n        const isConnected = !!account;\n        if (isConnected) try {\n          await provider.request({\n            method: \"wallet_requestPermissions\",\n            params: [{\n              eth_accounts: {}\n            }]\n          });\n          account = await this.getAccount();\n        } catch (error) {\n          if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n          if (error.code === new ResourceUnavailableRpcError(error).code) throw error;\n        }\n      }\n      if (!account) {\n        const accounts = await provider.request({\n          method: \"eth_requestAccounts\"\n        });\n        account = getAddress(accounts[0]);\n      }\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options?.shimDisconnect) this.storage?.setItem(this.shimDisconnectKey, true);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      if (error.code === -32002) throw new ResourceUnavailableRpcError(error);\n      throw error;\n    }\n  }\n};\n_UNSTABLE_shimOnConnectSelectAccount = new WeakMap();\nexport { MetaMaskConnector };","map":{"version":3,"names":["InjectedConnector","ConnectorNotFoundError","__privateAdd","__privateGet","__privateSet","ResourceUnavailableRpcError","UserRejectedRequestError","getAddress","_UNSTABLE_shimOnConnectSelectAccount","MetaMaskConnector","constructor","chains","options","options_","name","shimDisconnect","getProvider","getReady","ethereum2","isMetaMask","isBraveWallet","_events","_state","isApexWallet","isAvalanche","isBitKeep","isBlockWallet","isCoin98","isFordefi","isMathWallet","isOkxWallet","isOKExWallet","isOneInchIOSWallet","isOneInchAndroidWallet","isOpera","isPortal","isRabby","isDefiant","isTokenPocket","isTokenary","isZeal","isZerion","window","ethereum","providers","find","id","shimDisconnectKey","UNSTABLE_shimOnConnectSelectAccount","connect","chainId","provider","on","onAccountsChanged","onChainChanged","onDisconnect","emit","type","account","storage","getItem","getAccount","catch","isConnected","request","method","params","eth_accounts","error","isUserRejectedRequestError","code","accounts","getChainId","unsupported","isChainUnsupported","chain","switchChain","setItem","WeakMap"],"sources":["/home/adib-alpha/projects/ethereum-app/node_modules/@wagmi/connectors/dist/metaMask.js"],"sourcesContent":["import {\n  InjectedConnector\n} from \"./chunk-P4NRLOY7.js\";\nimport {\n  ConnectorNotFoundError\n} from \"./chunk-UGBGYVBH.js\";\nimport \"./chunk-OQILYQDO.js\";\nimport {\n  __privateAdd,\n  __privateGet,\n  __privateSet\n} from \"./chunk-W65LBPLT.js\";\n\n// src/metaMask.ts\nimport {\n  ResourceUnavailableRpcError,\n  UserRejectedRequestError,\n  getAddress\n} from \"viem\";\nvar _UNSTABLE_shimOnConnectSelectAccount;\nvar MetaMaskConnector = class extends InjectedConnector {\n  constructor({\n    chains,\n    options: options_\n  } = {}) {\n    const options = {\n      name: \"MetaMask\",\n      shimDisconnect: true,\n      getProvider() {\n        function getReady(ethereum2) {\n          const isMetaMask = !!ethereum2?.isMetaMask;\n          if (!isMetaMask)\n            return;\n          if (ethereum2.isBraveWallet && !ethereum2._events && !ethereum2._state)\n            return;\n          if (ethereum2.isApexWallet)\n            return;\n          if (ethereum2.isAvalanche)\n            return;\n          if (ethereum2.isBitKeep)\n            return;\n          if (ethereum2.isBlockWallet)\n            return;\n          if (ethereum2.isCoin98)\n            return;\n          if (ethereum2.isFordefi)\n            return;\n          if (ethereum2.isMathWallet)\n            return;\n          if (ethereum2.isOkxWallet || ethereum2.isOKExWallet)\n            return;\n          if (ethereum2.isOneInchIOSWallet || ethereum2.isOneInchAndroidWallet)\n            return;\n          if (ethereum2.isOpera)\n            return;\n          if (ethereum2.isPortal)\n            return;\n          if (ethereum2.isRabby)\n            return;\n          if (ethereum2.isDefiant)\n            return;\n          if (ethereum2.isTokenPocket)\n            return;\n          if (ethereum2.isTokenary)\n            return;\n          if (ethereum2.isZeal)\n            return;\n          if (ethereum2.isZerion)\n            return;\n          return ethereum2;\n        }\n        if (typeof window === \"undefined\")\n          return;\n        const ethereum = window.ethereum;\n        if (ethereum?.providers)\n          return ethereum.providers.find(getReady);\n        return getReady(ethereum);\n      },\n      ...options_\n    };\n    super({ chains, options });\n    this.id = \"metaMask\";\n    this.shimDisconnectKey = `${this.id}.shimDisconnect`;\n    __privateAdd(this, _UNSTABLE_shimOnConnectSelectAccount, void 0);\n    __privateSet(this, _UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", { type: \"connecting\" });\n      let account = null;\n      if (__privateGet(this, _UNSTABLE_shimOnConnectSelectAccount) && this.options?.shimDisconnect && !this.storage?.getItem(this.shimDisconnectKey)) {\n        account = await this.getAccount().catch(() => null);\n        const isConnected = !!account;\n        if (isConnected)\n          try {\n            await provider.request({\n              method: \"wallet_requestPermissions\",\n              params: [{ eth_accounts: {} }]\n            });\n            account = await this.getAccount();\n          } catch (error) {\n            if (this.isUserRejectedRequestError(error))\n              throw new UserRejectedRequestError(error);\n            if (error.code === new ResourceUnavailableRpcError(error).code)\n              throw error;\n          }\n      }\n      if (!account) {\n        const accounts = await provider.request({\n          method: \"eth_requestAccounts\"\n        });\n        account = getAddress(accounts[0]);\n      }\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options?.shimDisconnect)\n        this.storage?.setItem(this.shimDisconnectKey, true);\n      return { account, chain: { id, unsupported }, provider };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error))\n        throw new UserRejectedRequestError(error);\n      if (error.code === -32002)\n        throw new ResourceUnavailableRpcError(error);\n      throw error;\n    }\n  }\n};\n_UNSTABLE_shimOnConnectSelectAccount = new WeakMap();\nexport {\n  MetaMaskConnector\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}