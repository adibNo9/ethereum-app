{"ast":null,"code":"var _jsxFileName = \"/home/adib-alpha/projects/ethereum-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAccount, useConnect, useContractWrite, useDisconnect, usePrepareContractWrite, useWaitForTransaction } from \"wagmi\";\nimport { connector } from \"./\";\nimport { useDebounce } from \"./hooks/useDebounce\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _ref;\n  const account = useAccount({\n    onConnect({\n      address,\n      connector,\n      isReconnected\n    }) {\n      console.log(\"Connected\", {\n        address,\n        connector,\n        isReconnected\n      });\n    }\n  });\n  const {\n    disconnect\n  } = useDisconnect();\n  const {\n    connect,\n    isLoading,\n    error\n  } = useConnect({\n    connector: connector\n  });\n  const [tokenId, setTokenId] = useState(\"\");\n  const debouncedTokenId = useDebounce(tokenId);\n  const {\n    config,\n    error: prepareError,\n    isError: isPrepareError\n  } = usePrepareContractWrite({\n    address: account.addresss,\n    abi: [{\n      name: \"mint\",\n      type: \"function\",\n      stateMutability: \"nonpayable\",\n      inputs: [{\n        internalType: \"uint32\",\n        name: \"tokenId\",\n        type: \"uint32\"\n      }],\n      outputs: []\n    }],\n    functionName: \"mint\",\n    args: [parseInt(debouncedTokenId)],\n    enabled: Boolean(debouncedTokenId)\n  });\n  const {\n    data,\n    error: errorContract,\n    isError,\n    write\n  } = useContractWrite(config);\n  console.log(data);\n  const {\n    isLoading: isLoadingTransaction,\n    isSuccess\n  } = useWaitForTransaction({\n    hash: data === null || data === void 0 ? void 0 : data.hash\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: account.isConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Connected Wallet: \", account.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnect,\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          write === null || write === void 0 ? void 0 : write();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"tokenId\",\n          children: \"Token ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"tokenId\",\n          onChange: e => setTokenId(e.target.value),\n          placeholder: \"420\",\n          value: tokenId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !write || isLoading,\n          children: isLoading ? \"Minting...\" : \"Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), isSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Successfully minted your NFT!\", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://etherscan.io/tx/${data === null || data === void 0 ? void 0 : data.hash}`,\n              children: \"Etherscan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), (isPrepareError || isError) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Error: \", (_ref = prepareError || error) === null || _ref === void 0 ? void 0 : _ref.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isLoading,\n        onClick: connect,\n        children: isLoading ? \"Connecting...\" : \"Connect metamask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n}\n_s(App, \"vyQa8jyZhJdIlne1OxX8EDy+O0I=\", false, function () {\n  return [useAccount, useDisconnect, useConnect, useDebounce, usePrepareContractWrite, useContractWrite, useWaitForTransaction];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useAccount","useConnect","useContractWrite","useDisconnect","usePrepareContractWrite","useWaitForTransaction","connector","useDebounce","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_ref","account","onConnect","address","isReconnected","console","log","disconnect","connect","isLoading","error","tokenId","setTokenId","debouncedTokenId","config","prepareError","isError","isPrepareError","addresss","abi","name","type","stateMutability","inputs","internalType","outputs","functionName","args","parseInt","enabled","Boolean","data","errorContract","write","isLoadingTransaction","isSuccess","hash","children","isConnected","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","e","preventDefault","for","id","onChange","target","value","placeholder","disabled","href","message","_c","$RefreshReg$"],"sources":["/home/adib-alpha/projects/ethereum-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport {\n  useAccount,\n  useConnect,\n  useContractWrite,\n  useDisconnect,\n  usePrepareContractWrite,\n  useWaitForTransaction,\n} from \"wagmi\";\n\nimport { connector } from \"./\";\nimport { useDebounce } from \"./hooks/useDebounce\";\n\nfunction App() {\n  const account = useAccount({\n    onConnect({ address, connector, isReconnected }) {\n      console.log(\"Connected\", { address, connector, isReconnected });\n    },\n  });\n  const { disconnect } = useDisconnect();\n  const { connect, isLoading, error } = useConnect({\n    connector: connector,\n  });\n\n  const [tokenId, setTokenId] = useState(\"\");\n  const debouncedTokenId = useDebounce(tokenId);\n\n  const {\n    config,\n    error: prepareError,\n    isError: isPrepareError,\n  } = usePrepareContractWrite({\n    address: account.addresss,\n    abi: [\n      {\n        name: \"mint\",\n        type: \"function\",\n        stateMutability: \"nonpayable\",\n        inputs: [{ internalType: \"uint32\", name: \"tokenId\", type: \"uint32\" }],\n        outputs: [],\n      },\n    ],\n    functionName: \"mint\",\n    args: [parseInt(debouncedTokenId)],\n    enabled: Boolean(debouncedTokenId),\n  });\n  const {\n    data,\n    error: errorContract,\n    isError,\n    write,\n  } = useContractWrite(config);\n\n  console.log(data);\n\n  const { isLoading: isLoadingTransaction, isSuccess } = useWaitForTransaction({\n    hash: data?.hash,\n  });\n\n  return (\n    <>\n      {account.isConnected ? (\n        <>\n          <h2>Connected Wallet: {account.address}</h2>\n          <button onClick={disconnect}>Disconnect</button>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              write?.();\n            }}\n          >\n            <label for=\"tokenId\">Token ID</label>\n            <input\n              id=\"tokenId\"\n              onChange={(e) => setTokenId(e.target.value)}\n              placeholder=\"420\"\n              value={tokenId}\n            />\n            <button disabled={!write || isLoading}>\n              {isLoading ? \"Minting...\" : \"Mint\"}\n            </button>\n            {isSuccess && (\n              <div>\n                Successfully minted your NFT!\n                <div>\n                  <a href={`https://etherscan.io/tx/${data?.hash}`}>\n                    Etherscan\n                  </a>\n                </div>\n              </div>\n            )}\n            {(isPrepareError || isError) && (\n              <div>Error: {(prepareError || error)?.message}</div>\n            )}\n          </form>\n        </>\n      ) : (\n        <>\n          <button disabled={isLoading} onClick={connect}>\n            {isLoading ? \"Connecting...\" : \"Connect metamask\"}\n          </button>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}