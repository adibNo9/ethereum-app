{"ast":null,"code":"var _jsxFileName = \"/home/adib-alpha/projects/ethereum-app/src/index.js\";\nimport \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { createConfig, WagmiConfig } from \"wagmi\";\nimport { MetaMaskConnector } from \"@wagmi/connectors/metaMask\";\nimport { configureChains } from \"@wagmi/core\";\nimport { mainnet, polygon } from \"@wagmi/core/chains\";\nimport { publicProvider } from \"@wagmi/core/providers/public\";\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const connector = new MetaMaskConnector({\n  chains: [mainnet, polygon],\n  options: {\n    shimDisconnect: true,\n    UNSTABLE_shimOnConnectSelectAccount: true\n  }\n});\nconst {\n  publicClient,\n  webSocketPublicClient\n} = configureChains([mainnet], [publicProvider()]);\nconst config = createConfig({\n  autoConnect: false,\n  connector,\n  publicClient,\n  webSocketPublicClient\n});\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(WagmiConfig, {\n  config: config,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","createConfig","WagmiConfig","MetaMaskConnector","configureChains","mainnet","polygon","publicProvider","App","jsxDEV","_jsxDEV","connector","chains","options","shimDisconnect","UNSTABLE_shimOnConnectSelectAccount","publicClient","webSocketPublicClient","config","autoConnect","root","createRoot","document","getElementById","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/adib-alpha/projects/ethereum-app/src/index.js"],"sourcesContent":["import \"./index.css\";\n\nimport React from \"react\";\n\nimport ReactDOM from \"react-dom/client\";\nimport { createConfig, WagmiConfig } from \"wagmi\";\n\nimport { MetaMaskConnector } from \"@wagmi/connectors/metaMask\";\nimport { configureChains } from \"@wagmi/core\";\nimport { mainnet, polygon } from \"@wagmi/core/chains\";\nimport { publicProvider } from \"@wagmi/core/providers/public\";\n\nimport App from \"./App\";\n\nexport const connector = new MetaMaskConnector({\n  chains: [mainnet, polygon],\n  options: {\n    shimDisconnect: true,\n    UNSTABLE_shimOnConnectSelectAccount: true,\n  },\n});\n\nconst { publicClient, webSocketPublicClient } = configureChains(\n  [mainnet],\n  [publicProvider()]\n);\n\nconst config = createConfig({\n  autoConnect: false,\n  connector,\n  publicClient,\n  webSocketPublicClient,\n});\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <WagmiConfig config={config}>\n    <App />\n  </WagmiConfig>\n);\n"],"mappings":";AAAA,OAAO,aAAa;AAEpB,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,YAAY,EAAEC,WAAW,QAAQ,OAAO;AAEjD,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,eAAe,QAAQ,aAAa;AAC7C,SAASC,OAAO,EAAEC,OAAO,QAAQ,oBAAoB;AACrD,SAASC,cAAc,QAAQ,8BAA8B;AAE7D,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,OAAO,MAAMC,SAAS,GAAG,IAAIR,iBAAiB,CAAC;EAC7CS,MAAM,EAAE,CAACP,OAAO,EAAEC,OAAO,CAAC;EAC1BO,OAAO,EAAE;IACPC,cAAc,EAAE,IAAI;IACpBC,mCAAmC,EAAE;EACvC;AACF,CAAC,CAAC;AAEF,MAAM;EAAEC,YAAY;EAAEC;AAAsB,CAAC,GAAGb,eAAe,CAC7D,CAACC,OAAO,CAAC,EACT,CAACE,cAAc,CAAC,CAAC,CACnB,CAAC;AAED,MAAMW,MAAM,GAAGjB,YAAY,CAAC;EAC1BkB,WAAW,EAAE,KAAK;EAClBR,SAAS;EACTK,YAAY;EACZC;AACF,CAAC,CAAC;AAEF,MAAMG,IAAI,GAAGpB,QAAQ,CAACqB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTd,OAAA,CAACR,WAAW;EAACgB,MAAM,EAAEA,MAAO;EAAAO,QAAA,eAC1Bf,OAAA,CAACF,GAAG;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACI,CACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}